---
- name: Install and configure ConteinerD
  hosts: all
  tasks:
  - name: Install kernel linux modules
    ansible.builtin.copy:
      src: ./k8s.conf
      dest: /etc/modules-load.d/k8s.conf
      mode: '644'

  - name: Add overlay
    community.general.modprobe:
      name: overlay
      state: present

  - name: Add br_netfilter
    ansible.builtin.modprobe:
      name: br_netfilter
      state: present

  # - name: Config sysctl
  #   ansible.builtin.copy:
  #     src: ./k8s-cri.conf
  #     dest: /etc/sysctl.d/k8s-cri.conf
  #     mode: '644'

  # - name: Run sysctl
  #   ansible.builtin.command:
  #     command: sysctl --system
  #     creates: sysctl_exec

  - name: Change various sysctl-settings
    ansible.posix.sysctl:
      name: '{{ item.key }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
    with_dict: '{{ sysctl_config }}'
    vars:
      sysctl_config:
        net.ipv4.ip_forward: 1
        net.ipv4.conf.all.forwarding: 1
        net.ipv6.conf.all.forwarding: 1

  - name: Install apt key
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add ConteinerD repo
    ansible.builtin.apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu/ jammy stable
      state: present

  - name: Install ConteinerD
    ansible.builtin.apt:
      name: containerd=1.16.12-1
      state: present
      update_cache: true

  - name: Create dir
    ansible.builtin.file:
      path: /etc/containerd
      state: directory
      owner: root
      group: root
      mode: 0644

  - name: Create config file
    ansible.builtin.command:
      command: containerd conf default > /etc/containerd/config.toml
      creates: containerd_exec

  # - name: Create config file
  #   ansible.builtin.shell:
  #     shell: containerd conf default > /etc/containerd/config.toml
  #     register: config_file_output
  #     changed_when: false

  # - name: Change Conteinerd config
  #   ansible.builtin.shell:
  #     cmd: sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  #     register: sed_output
  #     changed_when: false

  # - name: Replace
  #   ansible.builtin.replace:
  #     dest: /etc/containerd/config.toml
  #     regexp: "SystemdCgroup = false"
  #     replace: "SystemdCgroup = true"

  - name: SystemdCgroup change
    ansible.builtin.lineinfile:
      path: /etc/containerd/config.toml
      search_string: "SystemdCgroup = false"
      line: "SystemdCgroup = true"

  - name: Restart containerd
    ansible.builtin.service:
      name: containerd
      state: restarted
